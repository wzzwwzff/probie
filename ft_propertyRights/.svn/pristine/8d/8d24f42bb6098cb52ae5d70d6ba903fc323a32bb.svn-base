package com.app.cq.service;

import com.app.cq.model.Contract;
import com.app.cq.model.Family;
import com.google.common.collect.Maps;
import com.sqds.hibernate.HibernateDao;
import com.sqds.page.PageInfo;
import com.sqds.utils.Collections3;
import com.sqds.web.ParamUtils;
import org.apache.logging.log4j.util.Strings;
import org.springframework.stereotype.Service;

import javax.servlet.http.HttpServletRequest;
import java.util.Enumeration;
import java.util.List;
import java.util.Map;

@Service
public class StatisticsService extends HibernateDao {

    /**
     * 获取项目名称，每个项目的家庭数量
     *
     * @return
     */
    public Map<String, String> getProjectCount() {
        String sql = "select projectName,count(id) as familyCount from family group by projectName order by projectName ";
        List<Object[]> mapList = (List<Object[]>) this.getSession().createSQLQuery(sql).list();
        Map<String, String> resultMap = Maps.newLinkedHashMap();
        if (Collections3.isNotEmpty(mapList)) {
            for (int i = 0; i <mapList.size() ; i++) {
                String projectName = mapList.get(i)[0].toString();
                String familyCount = mapList.get(i)[1].toString();
                resultMap.put(projectName,familyCount);
            }
        }
        return resultMap;
    }

    /**
     * 综合统计查询方法
     *
     * @param pageInfo
     */
    public PageInfo<Family> getListForCompositeSearch(PageInfo<Family> pageInfo, HttpServletRequest request) {
        StringBuffer hql = new StringBuffer("select f from Family f,House h,Contract c where 1=1 ");   //and len(f.idCode) = 10
        Enumeration<String> paramsArray = request.getParameterNames();
        while (paramsArray.hasMoreElements()) {
            String name = paramsArray.nextElement();
            if (name.endsWith("Array")) {
                String value = ParamUtils.getString(request, name, "");
                if (Strings.isNotEmpty(value)) {
                    if (name.indexOf("_string") > 0) {
                        value = this.getParamString(value);
                    }
                    String newName = name.substring(name.indexOf("_") + 1);
                    String columnName = newName.substring(0, newName.indexOf("_"));

                    hql.append(" and " + columnName + " in (" + value + ")");
                }
            }
        }
        hql.append("and f.id=c.family.id AND c.house.id=h.id order by f.projectName ");
        return this.list(pageInfo, hql.toString());
    }

    private String getParamString(String param) {
        String[] array = param.split(",");
        StringBuffer paramSb = new StringBuffer();
        for (String s : array) {
            paramSb.append("'" + s + "'").append(",");
        }
        paramSb.deleteCharAt(paramSb.lastIndexOf(","));
        return paramSb.toString();
    }

}
