package com.app.cq.web.cq;

import com.app.cq.exception.Response;
import com.app.cq.model.House;
import com.app.cq.model.Project;
import com.app.cq.service.HouseService;
import com.app.cq.service.ProjectService;
import com.sqds.page.PageInfo;
import com.sqds.web.ParamUtils;
import com.sqds.web.Servlets;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import java.math.BigDecimal;
import java.util.List;
import java.util.Map;

/**
 * Created by zy on 2018/8/10.
 */
@Controller
@RequestMapping("/cq/project/*")
public class ProjectController {

    @Autowired
    private ProjectService projectService;

    @Autowired
    private HouseService houseService;

    /**
     * 项目列表展示
     *
     * @param request
     * @param modelMap
     */
    @RequestMapping("projectList")
    public void projectList(HttpServletRequest request, ModelMap modelMap) {
        PageInfo<Project> pageInfo = new PageInfo<>();
        Servlets.initPageInfo(request, pageInfo);
        pageInfo.setPageSize(Integer.MAX_VALUE);
        pageInfo = this.projectService.list(pageInfo);
        modelMap.addAttribute("pageInfo", pageInfo);
    }

    /**
     * 项目登记或修改
     *
     * @param request
     * @param modelMap
     */
    @RequestMapping("projectForm")
    public void projectForm(HttpServletRequest request, ModelMap modelMap) {
        Integer projectId = ParamUtils.getInt(request, "projectId", 0);
        Project project = this.projectService.get(projectId);
        if (project == null) {
            project = new Project();
        }
        modelMap.addAttribute("project", project);
    }

    /**
     * 保存项目信息
     *
     * @param request
     */
    @RequestMapping("projectSave")
    public String projectSave(HttpServletRequest request) {
        Integer projectId = ParamUtils.getInt(request, "projectId", 0);
        Project project = this.projectService.get(projectId);
        //是空就是新增，不为空就是修改
        if (project == null) {
            project = new Project();
        }
        Servlets.bind(request, project);
        this.projectService.save(project);
        return "redirect:projectList?" + request.getAttribute("searchParams");
    }

    /**
     * 删除项目信息
     *
     * @param request
     * @return
     */
    @RequestMapping("delProject")
    public String delProject(HttpServletRequest request) {
        Integer projectId = ParamUtils.getInt(request, "projectId", 0);
        if (projectId != 0) {
            this.projectService.delete(projectId);
        }
        return "redirect:projectList";
    }

    /**
     * 楼号信息列表(带分页)
     *
     * @param request
     * @param modelMap
     */
   /* @RequestMapping("buildList")
    public void buildList(HttpServletRequest request, ModelMap modelMap) {
        Integer projectId = ParamUtils.getInt(request, "projectId", 0);
        Project project = this.projectService.get(projectId);
        modelMap.addAttribute("project", project);

        PageInfo<House> pageInfo = new PageInfo<>();
        Servlets.initPageInfo(request, pageInfo);
        pageInfo.addParameter("projectId", projectId);
        //pageInfo = this.houseService.list(pageInfo);
        pageInfo = this.houseService.buildList(pageInfo);

        List<House> houseList = pageInfo.getResult();
        Map<String, Integer> map=null;
        Integer allCount = null;
        Integer signed =null;
        for(House house:houseList){
            map = this.houseService.houseCount(house.getBuildNum(),projectId);
            allCount = map.get("allCount");
            signed = map.get("signed");
        }

        modelMap.addAttribute("pageInfo", pageInfo);
        modelMap.addAttribute("allCount", allCount);
        modelMap.addAttribute("signed", signed);
    }*/

    /**
     * 楼号信息列表(不带分页)
     *
     * @param request
     * @param modelMap
     */
   /* @RequestMapping("buildLists")
    public void buildLists(HttpServletRequest request, ModelMap modelMap) {
        //标题项目名显示要用
        Integer projectId = ParamUtils.getInt(request, "projectId", 0);
        Project project = this.projectService.get(projectId);
        modelMap.addAttribute("project", project);

        //根据项目查询项目下所有楼栋信息
        List list = this.houseService.buildLists(projectId);

        Map<String, Integer> map=null;
        Integer allCount = null;
        Integer signed =null;

        for(int i=0;i<list.size();i++){
            House house =(House) list.get(i);
            map = this.houseService.houseCount(house.getBuildNum(),projectId);
            allCount = map.get("allCount");
            signed = map.get("signed");
        }

        modelMap.addAttribute("list", list);
        modelMap.addAttribute("allCount", allCount);
        modelMap.addAttribute("signed", signed);
    }*/

    /**
     * 房源信息列表
     *
     * @param request
     * @param modelMap
     */
    @RequestMapping("houseList")
    public void houseList(HttpServletRequest request, ModelMap modelMap) {
        Integer projectId = ParamUtils.getInt(request, "projectId", 0);
        modelMap.addAttribute("projectId", projectId);

        //Integer projectId = ParamUtils.getInt(request, "projectId", 0);
        Project project = this.projectService.get(projectId);

        //加个楼号限制
        //Integer houseId = ParamUtils.getInt(request, "houseId", 0);
        //House house = this.houseService.get(houseId);
        //String buildNum = house.getBuildNum();
        //标题楼号显示用
        //modelMap.addAttribute("house", house);

        PageInfo<House> pageInfo = new PageInfo<>();
        Servlets.initPageInfo(request, pageInfo);
        pageInfo.addParameter("projectId", projectId);
        //pageInfo.addParameter("buildNum", house.getBuildNum());    //楼号
        pageInfo = this.houseService.houseList(pageInfo);
        //pageInfo = this.houseService.list(pageInfo);

        modelMap.addAttribute("project", project);
        modelMap.addAttribute("pageInfo", pageInfo);
    }

    /**
     * 房源登记或修改
     *
     * @param request
     * @param modelMap
     */
    @RequestMapping("houseForm")
    public void houseForm(HttpServletRequest request, ModelMap modelMap) {
        Integer projectId = ParamUtils.getInt(request, "projectId", 0);
        Integer houseId = ParamUtils.getInt(request, "houseId", 0);

        Project project = projectService.get(projectId);

        House house = houseService.get(houseId);
        if (house == null || house.getId() == null) {
            house = new House();
            if (project != null) {
                house.setProject(project);
            }
        }

        List<Project> projectList = projectService.listAll();

        modelMap.addAttribute("project", project);
        modelMap.addAttribute("house", house);
        modelMap.addAttribute("projectList", projectList);
    }

    /**
     * 保存房源信息
     *
     * @param request
     */
    @RequestMapping("houseSave")
    public String houseSave(HttpServletRequest request) {
        Integer projectId = ParamUtils.getInt(request, "projectId", 0);
        Integer houseId = ParamUtils.getInt(request, "houseId", 0);

        Project project = projectService.get(projectId);
        House house = houseService.get(houseId);
        if (house == null) {
            house = new House();
        }
        Servlets.bind(request, house);
        house.setProject(project);
        houseService.save(house);

        return "redirect:houseList?projectId=" + projectId;
    }

    /**
     * 删除房源信息
     *
     * @param request
     * @return
     */
    @RequestMapping("delHouse")
    public String delHouse(HttpServletRequest request) {
        Integer houseId = ParamUtils.getInt(request, "houseId", 0);
        House house = this.houseService.get(houseId);
        if (houseId != 0) {
            this.houseService.delete(house.getId());
        }
        return "redirect:houseList?projectId="+house.getProject().getId();
    }

    //批量导入项目
    @RequestMapping("plInsertData")
    public void plInsertData(){}

    /**
     * 批量项目保存
     */
    @RequestMapping("plInsertDataSave")
    @ResponseBody
    public Response plInsertDataSave(HttpServletRequest request){
        String content = ParamUtils.getString(request, "content", "");
        String[] data = content.split("\n");
        int count=0;
        for(int i=0;i<data.length;i++){
            Project project=new Project();
            String s = data[i];
            String[] projects = s.split(" ");
            for(int j=0;j<projects.length;j++){
                String projectName = projects[0];//项目名称
                String enterprise = projects[1];//企业名称
                String address = projects[2];   //项目位置
                String progress = projects[3];  //进展情况 Integer
                String number = projects[4];    //套数 Integer
                String price = projects[5];     //销售均价
                project.setProjectName(projectName);
                project.setEnterprise(enterprise);
                project.setAddress(address);
                project.setProgress(Integer.valueOf(progress));
                project.setNumber(Integer.valueOf(number));
                project.setPrice(price);
            }
            count++;
            //保存数据
            this.projectService.save(project);
        }

        Response response = new Response();
        response.setCode("1111");
        response.setMessage("本次共更新了"+ count + "条数据！");

        return response;
    }

    //批量导入房源
    @RequestMapping("plHouseInsertData")
    public void plHouseInsertData(HttpServletRequest request,ModelMap modelMap){
        Integer projectId = ParamUtils.getInt(request, "projectId", 0);
        Project project = this.projectService.get(projectId);
        modelMap.addAttribute("project",project);
    }

    /**
     * 批量房源保存
     */
    @RequestMapping("plHouseInsertDataSave")
    @ResponseBody
    public Response plHouseInsertDataSave(HttpServletRequest request){
        //带过来项目名
        Integer projectId = ParamUtils.getInt(request, "projectId", 0);
        Project project = this.projectService.get(projectId);

        String content = ParamUtils.getString(request, "content", "");
        String[] data = content.split("\n");
        int count=0;
        for(int i=0;i<data.length;i++){
            House house=new House();
            String s = data[i];
            String[] houses = s.split(" ");
            for(int j=0;j<houses.length;j++){
                String buildNum = houses[0];//楼号
                String unitNum = houses[1];//单元
                String houseNum = houses[2];   //房号
                String houseType = houses[3];  //居室
                String buildArea = houses[4];    //建筑面积
                String memo = houses[5];
                house.setBuildNum(buildNum);
                house.setUnitNum(unitNum);
                house.setHouseNum(houseNum);
                house.setHouseType(Integer.valueOf(houseType));
                house.setBuildArea(new BigDecimal(buildArea));
                house.setMemo(memo);
                house.setProject(project);
            }
            count++;
            //保存数据
            this.houseService.save(house);
        }

        Response response = new Response();
        response.setCode("1111");
        response.setMessage("本次共更新了"+ count + "条数据！");

        return response;
    }

}
