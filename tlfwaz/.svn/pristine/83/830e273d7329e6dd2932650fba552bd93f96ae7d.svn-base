package com.app.cq.web.cq;

import com.alibaba.fastjson.JSON;
import com.app.cq.exception.Precondition;
import com.app.cq.model.Area;
import com.app.cq.model.Family;
import com.app.cq.model.FamilyPerson;
import com.app.cq.model.Project;
import com.app.cq.service.AreaService;
import com.app.cq.service.FamilyPersonService;
import com.app.cq.service.FamilyService;
import com.app.cq.service.ProjectService;
import com.sqds.exception.SqdsException;
import com.sqds.page.PageInfo;
import com.sqds.web.ParamUtils;
import com.sqds.web.Servlets;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.ServletRequest;
import javax.servlet.http.HttpServletRequest;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 家庭信息管理
 * Created by jmdf on 2018/9/5.
 */
@Controller
@RequestMapping("/cq/family/*")
public class FamilyController {
    @Autowired
    private FamilyService familyService;
    @Autowired
    private FamilyPersonService familyPersonService;
    @Autowired
    private ProjectService projectService;
    @Autowired
    private AreaService areaService;

    /**
     * 基础家庭数据列表
     * @param request
     * @param modelMap
     */
    @RequestMapping("list")
    public void list(HttpServletRequest request, ModelMap modelMap){
        PageInfo<Family> pageInfo = new PageInfo<>();
        Servlets.initPageInfo(request,pageInfo);

        pageInfo = familyService.familyList(pageInfo);
        modelMap.addAttribute("pageInfo",pageInfo);
    }

    /**
     * 表单
     * @param request
     * @param modelMap
     */
    @RequestMapping("form")
    public void form(HttpServletRequest request, ModelMap modelMap){
        int familyId = ParamUtils.getInt(request, "familyId", 0);
        Family family = familyService.get(familyId);
        family = family == null ? new Family() : family;

        List<FamilyPerson> familyPersonList = familyPersonService.listByFamilyId(familyId);
        List<Project> projectList = projectService.listAll();

        modelMap.addAttribute("family", family);
        modelMap.addAttribute("familyPersonList", familyPersonList);
        modelMap.addAttribute("projectList", projectList);
    }

    /**
     * 查看页面
     * @param request
     * @param modelMap
     */
    @RequestMapping("view")
    public void view(HttpServletRequest request, ModelMap modelMap) {
        Integer familyId = ParamUtils.getInt(request, "familyId", 0);
        Family family = this.familyService.get(familyId);
        Precondition.checkSqdsArguement(family != null,"未找到数据");
        //家庭成员列表
        List<FamilyPerson> familyPersonList = this.familyPersonService.listByFamilyId(familyId);
        modelMap.addAttribute("family", family);
        modelMap.addAttribute("familyPersonList", familyPersonList);
    }

    /**
     * 保存表单
     */
    @RequestMapping("save")
    public String save(HttpServletRequest request, ModelMap modelMap) {
        Integer familyId = ParamUtils.getInt(request, "familyId", 0);
        Integer projectId = ParamUtils.getInt(request, "p_projectId", 0);
        Family family = familyService.get(familyId);
        if (family == null) {
            family = new Family();
        }
        Servlets.bind(request,family);
        Project project = this.projectService.get(projectId);
        family.setProject(project);
        this.familyService.saveFamily(request,family);
        return "redirect:list?" + request.getAttribute("searchParams");
    }

    /**
     * 地块信息
     */
    @RequestMapping("getAreaByProjectId")
    @ResponseBody
    public String getZsAreaByZsProjectId(HttpServletRequest request) {
        int projectId = ParamUtils.getInt(request, "projectId", 0);
        List<Area> list = areaService.getListByProjectId(projectId);
        String str = JSON.toJSONString(list);
        return str;
    }

    /**
     * 删除family及familyPerson
     * @param request
     * @return
     */
    @RequestMapping("delete")
    @ResponseBody
    public Map<String,String> delete(ServletRequest request){
        Map<String,String> map = new HashMap<String, String>();
        int id = ParamUtils.getInt(request,"familyId",0);
        String message = "";
        if (id==0){
            message = "未找到家庭信息请重试";
        }
        familyService.deleteByFamilyId(id);
        map.put("success","true");
        return map;
    }

    /**
     * 删除familyPerson
     */
    @RequestMapping("deleteFamilyPerson")
    public void deleteFamilyPerson(ServletRequest request){
        int familyPersonId = ParamUtils.getInt(request,"familyPersonId",0);
        if (familyPersonId == 0){
            throw new SqdsException("未找到此数据");
        }
        familyPersonService.delete(familyPersonId);
    }

    /**
     * 编号重复验证
     * @param request
     * @return
     */
    @RequestMapping("checkRepeat")
    @ResponseBody
    public boolean  checkRepeat(ServletRequest request){
        String familyCode = ParamUtils.getString(request,"familyCode","");
        Integer familyId = ParamUtils.getInt(request,"familyId",0);

        Family family = familyService.checkRepeat(familyCode, familyId);
        if (family != null) {
            return false;
        }else {
            return true;
        }
    }
}
