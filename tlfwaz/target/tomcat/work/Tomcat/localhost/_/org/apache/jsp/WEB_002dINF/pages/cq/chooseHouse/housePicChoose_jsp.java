/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-10-14 05:02:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages.cq.chooseHouse;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.app.cq.model.Family;
import java.util.List;
import java.util.Map;
import com.app.cq.model.House;
import com.app.common.model.DataDict;
import java.util.ArrayList;
import com.sqds.utils.StringUtils;
import com.app.cq.utils.ChooseHouseUtils;

public final class housePicChoose_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    Family family = (Family) request.getAttribute("family");
    int max = (Integer) request.getAttribute("maxFloor");
    List<String> unitList = (List<String>) request.getAttribute("unitList");
    List<House> choosedHouseList = (List<House>) request.getAttribute("choosedHouseList");
    Map<String, String> maxRoomByUnit = (Map<String, String>) request.getAttribute("maxRoomByUnitMap");
    Map<String, House> houseMap = (Map<String, House>) request.getAttribute("houseMap");
    Map<String, DataDict> flagMap = (Map<String, DataDict>) request.getAttribute("flagMap");
    Map<String, Map<String, String>> houseTypeMap = (Map<String, Map<String, String>>) request.getAttribute("houseTypeMap");
    Map<String, String> houseTypeDataDictMap = (Map<String, String>) request.getAttribute("houseTypeDataDictMap");
    Map<String, String> typeMap = (Map<String, String>) request.getAttribute("typeMap");
    int column = 0;

      out.write("\r\n");
      out.write("<div style=\"text-align: center;width: 99%;margin-top: 10px;\" id=\"content\">\r\n");
      out.write("    <span style=\"color: black;font-size: 18px;\">图例：</span>\r\n");
      out.write("    <button class=\"button btn button-circle\"\r\n");
      out.write("            style=\"background-color: #999999;margin-bottom: 10px;width: 25px;height: 25px;\"></button>\r\n");
      out.write("    <span style=\"color:blue ;font-size: 18px;\">可选</span>\r\n");
      out.write("    <button class=\"button btn button-circle\"\r\n");
      out.write("            style=\"background-color: #CC3333;margin-bottom: 10px;width: 25px;height: 25px;\"></button>\r\n");
      out.write("    <span style=\"color: #CC3333;font-size: 18px;\">已选</span>\r\n");
      out.write("    <button class=\"button btn button-circle\"\r\n");
      out.write("            style=\"background-color: #999966;margin-bottom: 10px;width: 25px;height: 25px;\"></button>\r\n");
      out.write("    <span style=\"color: #999966;font-size: 18px;\">不可选</span>\r\n");
      out.write("    <br/><br/>\r\n");
      out.write("    ");

        if (max != 0) {
    
      out.write("\r\n");
      out.write("    <table width=\"100%\" border=\"1\" align=\"center\" cellpadding=\"1\" cellspacing=\"1\" bgcolor=\"#999999\">\r\n");
      out.write("        ");


            String temp = max + "";
            int maxFloorNum = max; //最大层高
            int[] setNum1 = new int[unitList.size()];

            List temp1 = new ArrayList();
            for (String s : unitList) {
                temp1.add(s);
            }
        
      out.write("\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td width=\"4%\" height=\"35\" bgcolor=\"#cccccc\" align=\"center\"><b>户型</b></td>\r\n");
      out.write("            ");

                int s = 0;
                for (int ii = temp1.size() - 1; ii >= 0; ii--) {
//                for (int ii = 0; ii < temp1.size(); ii++) {
                    String si = (String) temp1.get(ii);
                    int maxSetNum = 0;

                    String roomCode = (String) maxRoomByUnit.get(si);
                    if (roomCode == null) {
                        setNum1[s] = 0;
                        s++;
                        continue;
                    }
                    temp = roomCode.substring(roomCode.length() - 2);
                    maxSetNum = Integer.parseInt(temp);


                    for (int j = 0; j < maxSetNum; j++) {
//                     for (int j = maxSetNum - 1; j >= 0; j--) {
                        String prefix = "0" + (j + 1);
                        prefix = prefix.substring(prefix.length() - 2);

                        Map<String, String> baseInfo = houseTypeMap.get(si);
                        String info = "";
                        String dataDict = baseInfo.get(prefix);//居室/套型
                        if (dataDict != null) {
                            String js = houseTypeDataDictMap.get(dataDict);
                            info = "<b>" + js + "</b>";
                        }

            
      out.write("\r\n");
      out.write("            <td bgcolor=\"#cccccc\" align=\"center\"\r\n");
      out.write("                ");
if(j==maxSetNum-1){
      out.write("style=\"border-left:#999999 3px solid;\"");
}
      out.write(">\r\n");
      out.write("                ");
      out.print(info);
      out.write("\r\n");
      out.write("            </td>\r\n");
      out.write("            ");
 }
            }
      out.write("\r\n");
      out.write("        </tr>\r\n");
      out.write("\r\n");
      out.write("        ");

            for (int i = maxFloorNum; i > 0; i--) { 
      out.write("\r\n");
      out.write("        <tr bgcolor=\"#FFFFFF\">\r\n");
      out.write("            <td width=\"4%\" height=\"18\" bgcolor=\"#D6D3D6\">\r\n");
      out.write("                <div align=\"center\">");
      out.print(i);
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </td>\r\n");
      out.write("            ");

                String floorStr = "0" + i;
                if (floorStr.length() > 2) {
                    floorStr = floorStr.substring(1); //层
                }
                s = 0;
                //for (int ii = temp1.size() - 1; ii >= 0; ii--) {
                for (int ii = 0; ii < temp1.size(); ii++) {
                    String si = (String) temp1.get(ii);
                    int maxSetNum = 0;

                    String roomCode = (String) maxRoomByUnit.get(si);
                    if (roomCode == null) {
                        setNum1[s] = 0;
                        s++;
                        continue;
                    }

                    temp = roomCode.substring(roomCode.length() - 2);
                    maxSetNum = Integer.parseInt(temp);
                    setNum1[s] = maxSetNum;

                    if (i == 1) {
                        column += maxSetNum;
                    }
                    //for (int j = 0; j < maxSetNum; j++) {
                    for (int j = maxSetNum - 1; j >= 0; j--) {
                        String roomNum = "0" + (j + 1);
                        if (roomNum.length() > 2) {
                            roomNum = roomNum.substring(roomNum.length() - 2, roomNum.length());
                        }
                        String room1 = floorStr + roomNum;
                        String bgColor = "#ffffff";


                        House house = (House) houseMap.get(si + "-" + room1);
                        String roomNum1 = "";
                        String area = "";
                        String showInfo = "";
                        String click = "";   // 点击事件
                        String cursor = "";
                        String str2 = "";
                        if (house != null) {
                            area = StringUtils.getNotNullDecimal(house.getBuildArea());
                            if (!area.equals("") && !area.equals("0")) {
                                area = area + "㎡";
                            }
//                            roomNum1 = house.getMemo();
                            String dataDict = houseTypeDataDictMap.get(house.getHouseType() + "");//居室/套型
                            if (dataDict != null) {
//                                str2 = dataDict.getAttributeName();
                            }
                            showInfo = "<font style='font-size:20px;'>" + house.getHouseNum() + "</font></br>";
                            if (!area.equals("") && !area.equals("0.00㎡")) {
                                showInfo += "<font style='font-size:17px;'>" + area + "</font>";
                            }
                            String br = "<br/>";
                            if (house.getHouseType() != null && !house.getHouseType().equals("")) {
//                                showInfo +="<br/><font style='font-size:20px;'>"+house.getHouseType()+"</font>&nbsp;&nbsp;";
                                br = "";
                            }
                        }

                        String houseStatus = "";
                        if (house != null) {
                            houseStatus = house.getHouseStatus() + "";
                        }
                        if (houseStatus != null && houseStatus.equals("3")) {//伪选的默认为已选
                            houseStatus = "2";
                        }

                        DataDict colorDataDict = flagMap.get(houseStatus);
                        if (colorDataDict != null) {
                            bgColor = colorDataDict.getAttributeColor();
                            if (houseStatus.equals("1")) {
                                if (ChooseHouseUtils.levelLimit(family, house, choosedHouseList)) {

                                } else {
                                    //面积验证，如果面积够了设置背景色为灰色不可点
                                    bgColor = "#999966";
                                    click = "";
                                    cursor = "";
                                }
                            } else {
                                if (bgColor.equals("#ffff77")) {
                                    bgColor = "#ff4330";
                                }
                            }
                        }
                        if (houseStatus.equals("1")) {
                            if (ChooseHouseUtils.levelLimit(family, house, choosedHouseList)) {
                                StringBuffer tipInfo = new StringBuffer("请确认以下所选房源信息：\n\n");
                                tipInfo.append("项目名称：" + house.getAzProject().getProjectName() + "\n");
                                tipInfo.append("楼&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 号：" + house.getBuildNum() + "号楼\n");
                                tipInfo.append("单&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 元：" + house.getUnitNum() + "单元\n");
                                tipInfo.append("房&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 号：" + house.getHouseNum() + "\n");
                                tipInfo.append("面&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 积：" + house.getBuildArea() + "㎡\n");
                                tipInfo.append("居&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 室：" + (houseTypeDataDictMap.get(house.getHouseType() + "")) + "\n");
                                click = "onclick ='loadHouse(" + house.getId() + ")'";
                                cursor = "cursor: pointer";
//                                    showInfo += "<br/><input type='radio' name='houseId' value='" + house.getId() + "," + house.getHouseType() + "," + house.getProject().getProjectCode() + "," + house.getBuildArea() + "' tipInfo='" + tipInfo + "'/>";
                            }
                        }
                        float width = 0;
                        if (temp1.size() > 0) {
                            width = 95 / maxSetNum / temp1.size();
                        } else {
                            width = 95 / maxSetNum;
                        }

                        //showInfo += "-"+ house.getUnitNum();

            
      out.write("\r\n");
      out.write("            <td ");
      out.print(click);
      out.write(" height=\"40\" width=\"");
      out.print(width );
      out.write("%\" bgcolor=\"");
      out.print(bgColor);
      out.write("\"\r\n");
      out.write("                           style=\"text-align:center;");
if(j==maxSetNum-1){
      out.write("border-left:#999999 0px solid;");
}
      out.write("\r\n");
      out.write("                               ");
if(j==0){
      out.write("border-left:#999999 3px solid;");
}
      out.write(";\r\n");
      out.write("                           ");
      out.write("\r\n");
      out.write("                           ");
      out.write("\r\n");
      out.write("                                   ");
      out.print(cursor);
      out.write("\">\r\n");
      out.write("                ");
      out.print(showInfo );
      out.write("\r\n");
      out.write("                ");
      out.write("\r\n");
      out.write("                ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            </td>\r\n");
      out.write("            ");
 }
                s++;
            }
            
      out.write("\r\n");
      out.write("        </tr>\r\n");
      out.write("        ");
}
      out.write("\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td bgcolor=\"#cccccc\" height=\"35\">\r\n");
      out.write("                <div class=\"out\">\r\n");
      out.write("                    <span class=\"em\">楼层</span>\r\n");
      out.write("                    <span class=\"bm\">单元</span>\r\n");
      out.write("                </div>\r\n");
      out.write("            </td>\r\n");
      out.write("            ");


                int p = 0;
                for (int j = 0; j < temp1.size(); j++) {
                //for (int j = temp1.size() - 1; j >= 0; j--) {
                    String si = (String) temp1.get(j);
                    int t = setNum1[p];
                    if (t == 0) {
                        p++;
                        continue;
                    }
            
      out.write("\r\n");
      out.write("            <td height=\"25\" colspan=\"");
      out.print(t);
      out.write("\" bgcolor=\"#BDBABD\" align=\"center\"\r\n");
      out.write("                style=\"border-left:#999999 1px solid; border-right:#999999 1px solid;\">");
      out.print(si);
      out.write("单元\r\n");
      out.write("            </td>\r\n");
      out.write("            ");

                    p++;
                }
      out.write("\r\n");
      out.write("        </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("    <table border=\"0\" align=\"center\" cellpadding=\"5\" cellspacing=\"0\">\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td colspan=\"9\" height=\"10\"></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td colspan=\"9\" height=\"10\"></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("    ");

        }
    
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("    <div class=\"modal-dialog\" style=\"width: 900px;height: 900px;\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\"><span aria-hidden=\"true\">&times;</span><span\r\n");
      out.write("                        class=\"sr-only\">Close</span></button>\r\n");
      out.write("                <h4 class=\"modal-title\" id=\"myModalLabel\">房源信息</h4>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\" id=\"modalBody\">\r\n");
      out.write("                <input type=\"hidden\" id=\"houseUuid\" name=\"houseUuid\">\r\n");
      out.write("\r\n");
      out.write("                <div id=\"houseLoad\"></div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"modal-footer\">\r\n");
      out.write("                    <button class=\"btn btn-primary btn-sm\" type=\"button\" onclick=\"javascript:saveBuildInfo()\"><i\r\n");
      out.write("                            class=\"fa fa-save\"></i>&nbsp;确认房源\r\n");
      out.write("                    </button>\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">关闭</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("    function loadHouse(houseUuid) {\r\n");
      out.write("        $(\"input:hidden[name='houseUuid']\").val(houseUuid);\r\n");
      out.write("        $.get(\"houseInfo\", {houseId: houseUuid, _time: new Date().getTime()}, function (data) {\r\n");
      out.write("            $(\"#houseLoad\").html(data);\r\n");
      out.write("            $(\"#myModal\").modal();\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
