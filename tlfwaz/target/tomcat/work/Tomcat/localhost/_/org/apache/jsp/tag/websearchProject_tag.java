/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-09-07 08:48:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.tag;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.sqds.page.PageInfo;
import java.util.List;
import org.apache.logging.log4j.util.Strings;
import com.app.cq.model.Project;
import com.app.cq.utils.ProjectUtils;

public final class websearchProject_tag
    extends javax.servlet.jsp.tagext.SimpleTagSupport
    implements org.apache.jasper.runtime.JspSourceDependent {


  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.servlet.jsp.JspContext jspContext;
  private java.io.Writer _jspx_sout;
  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public void setJspContext(javax.servlet.jsp.JspContext ctx) {
    super.setJspContext(ctx);
    java.util.ArrayList _jspx_nested = null;
    java.util.ArrayList _jspx_at_begin = null;
    java.util.ArrayList _jspx_at_end = null;
    this.jspContext = new org.apache.jasper.runtime.JspContextWrapper(ctx, _jspx_nested, _jspx_at_begin, _jspx_at_end, null);
  }

  public javax.servlet.jsp.JspContext getJspContext() {
    return this.jspContext;
  }
  private java.lang.String className;
  private java.lang.String areaFlag;
  private java.lang.String allFlag;
  private java.lang.String paramType;

  public java.lang.String getClassName() {
    return this.className;
  }

  public void setClassName(java.lang.String className) {
    this.className = className;
    jspContext.setAttribute("className", className);
  }

  public java.lang.String getAreaFlag() {
    return this.areaFlag;
  }

  public void setAreaFlag(java.lang.String areaFlag) {
    this.areaFlag = areaFlag;
    jspContext.setAttribute("areaFlag", areaFlag);
  }

  public java.lang.String getAllFlag() {
    return this.allFlag;
  }

  public void setAllFlag(java.lang.String allFlag) {
    this.allFlag = allFlag;
    jspContext.setAttribute("allFlag", allFlag);
  }

  public java.lang.String getParamType() {
    return this.paramType;
  }

  public void setParamType(java.lang.String paramType) {
    this.paramType = paramType;
    jspContext.setAttribute("paramType", paramType);
  }

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  private void _jspInit(javax.servlet.ServletConfig config) {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(config.getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(config);
  }

  public void _jspDestroy() {
  }

  public void doTag() throws javax.servlet.jsp.JspException, java.io.IOException {
    javax.servlet.jsp.PageContext _jspx_page_context = (javax.servlet.jsp.PageContext)jspContext;
    javax.servlet.http.HttpServletRequest request = (javax.servlet.http.HttpServletRequest) _jspx_page_context.getRequest();
    javax.servlet.http.HttpServletResponse response = (javax.servlet.http.HttpServletResponse) _jspx_page_context.getResponse();
    javax.servlet.http.HttpSession session = _jspx_page_context.getSession();
    javax.servlet.ServletContext application = _jspx_page_context.getServletContext();
    javax.servlet.ServletConfig config = _jspx_page_context.getServletConfig();
    javax.servlet.jsp.JspWriter out = jspContext.getOut();
    _jspInit(config);
    jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,jspContext);
    if( getClassName() != null ) 
      _jspx_page_context.setAttribute("className", getClassName());
    if( getAreaFlag() != null ) 
      _jspx_page_context.setAttribute("areaFlag", getAreaFlag());
    if( getAllFlag() != null ) 
      _jspx_page_context.setAttribute("allFlag", getAllFlag());
    if( getParamType() != null ) 
      _jspx_page_context.setAttribute("paramType", getParamType());

    try {
      out.write("<!--如果不为空且等于param，差的就是model里面的一个字段，否则，查的是关联类里面主键-->\r\n");

    PageInfo pageInfo = (PageInfo)request.getAttribute("pageInfo");
    List<Project> projectList = ProjectUtils.getProjectList(request);

    Integer projectId = 0;
    Integer areaId = 0;
    if(pageInfo!=null){
        try {
            projectId = Integer.valueOf(String.valueOf(pageInfo.getParameter("search_eq_integer_p.id")));
            areaId = Integer.valueOf(String.valueOf(pageInfo.getParameter("search_eq_integer_a.id")));
        } catch (Exception e) {
        }
    }
    StringBuffer classStr = new StringBuffer("");

    if (Strings.isNotEmpty(className)) {
        classStr.append(className);
    }
    String projectSelectName = "search_eq_integer_p.id";
    String areaSelectName = "search_eq_integer_a.id";
    if (paramType != null && paramType.equals("param")){
        projectSelectName = "search_eq_integer_projectId";
        areaSelectName = "search_eq_integer_areaId";
    }

      out.write("<div class=\"input-group input-group-sm\">\r\n");
      out.write("    <div class=\"input-group-addon\">项目名称</div>\r\n");
      out.write("    <select ");
      out.print(classStr.length() > 0 ? "class='" + classStr.toString() + "'" : "");
      out.write(" name=\"");
      out.print(projectSelectName);
      out.write("\"\r\n");
      out.write("                                                                                    id=\"projectId\">\r\n");
      out.write("        ");

            if (allFlag.equals("true")) {
        
      out.write("<option value=\"\">-全部-</option>\r\n");
      out.write("        ");
}

            for (Project project : projectList) {
        
      out.write("<option value=\"");
      out.print(project.getId());
      out.write('"');
      out.write(' ');
if (project.getId().intValue() == projectId.intValue()) {
            out.print("selected");
        }
        
      out.write('>');
      out.print(project.getProjectName());
      out.write("</option>\r\n");
      out.write("        ");
}
      out.write("</select>\r\n");
      out.write("</div>\r\n");
 if (areaFlag.equals("true")) {
      out.write("<div class=\"input-group input-group-sm\" id=\"areaDiv\">\r\n");
      out.write("    <div class=\"input-group-addon\">地块名称</div>\r\n");
      out.write("    <select  ");
      out.print(classStr.length() > 0 ? "class='" + classStr.toString() + "'" : "");
      out.write(" name=\"");
      out.print(areaSelectName);
      out.write("\"\r\n");
      out.write("                                                                                     id=\"areaId\"></select>\r\n");
      out.write("</div>\r\n");
}
      out.write("<script>\r\n");
      out.write("    var areaFlag = \"");
      out.print(areaFlag);
      out.write("\";\r\n");
      out.write("    $(function () {\r\n");
      out.write("        if (areaFlag == \"true\") {\r\n");
      out.write("            getAreaDiv(\"");
      out.print(projectId);
      out.write("\");\r\n");
      out.write("            $(\"#projectId\").change(function () {\r\n");
      out.write("                var projectId = $(this).val();\r\n");
      out.write("                getAreaDiv(projectId);\r\n");
      out.write("            })\r\n");
      out.write("        }\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    function getAreaDiv(projectId){\r\n");
      out.write("        var areaId = \"");
      out.print(areaId);
      out.write("\";\r\n");
      out.write("        if( projectId == 0){\r\n");
      out.write("            $(\"#areaId\").empty();\r\n");
      out.write("            $(\"#areaId\").append(\"<option value=''>-全部-</option>\");\r\n");
      out.write("            return false;\r\n");
      out.write("        }\r\n");
      out.write("        /*动态获取地块信息*/\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url: \"/cq/family/getAreaByProjectId\",\r\n");
      out.write("            data: {projectId: projectId,myTime:new Date().getTime()},\r\n");
      out.write("            success: function (data) {\r\n");
      out.write("                if (data) {\r\n");
      out.write("                    $(\"#areaId\").empty();\r\n");
      out.write("\r\n");
      out.write("                    var list = eval(\"(\" + data + \")\");\r\n");
      out.write("                    if (list.length == 0){\r\n");
      out.write("                        $(\"#areaId\").append(\"<option value=''>--</option>\");\r\n");
      out.write("                    } else {\r\n");
      out.write("                        var familyZsAreaId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${family.area.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)this.getJspContext(), null, false));
      out.write("\";\r\n");
      out.write("                        for (var i = 0; i < list.length; i++) {\r\n");
      out.write("\r\n");
      out.write("                            var selectedText = \"\";\r\n");
      out.write("                            var id = list[i].id;\r\n");
      out.write("\r\n");
      out.write("                            if (familyZsAreaId == id) {\r\n");
      out.write("                                selectedText = \"selected\";\r\n");
      out.write("                            }\r\n");
      out.write("                            var str = \"<option value='\" + id + \"' \" + selectedText + \" >\" + list[i].areaName + \"</option>\";\r\n");
      out.write("\r\n");
      out.write("                            $(\"#areaId\").append(str);\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            error: function () {\r\n");
      out.write("                alert(\"系统错误，请联系系统支持人员！\")\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("</script>");
    } catch( java.lang.Throwable t ) {
      if( t instanceof javax.servlet.jsp.SkipPageException )
          throw (javax.servlet.jsp.SkipPageException) t;
      if( t instanceof java.io.IOException )
          throw (java.io.IOException) t;
      if( t instanceof java.lang.IllegalStateException )
          throw (java.lang.IllegalStateException) t;
      if( t instanceof javax.servlet.jsp.JspException )
          throw (javax.servlet.jsp.JspException) t;
      throw new javax.servlet.jsp.JspException(t);
    } finally {
      jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,super.getJspContext());
      ((org.apache.jasper.runtime.JspContextWrapper) jspContext).syncEndTagFile();
    }
  }
}
