package com.app.cq.web.cq.family;

import com.app.common.model.DataDict;
import com.app.common.service.DataDictService;
import com.app.cq.map.FamilyExcelMap;
import com.app.cq.model.*;
import com.app.cq.service.*;
import com.app.cq.utils.GetCurrentUser;
import com.app.cq.utils.RedirectAttributesExcel;
import com.app.permission.model.User;
import com.google.common.collect.Lists;
import com.sqds.page.PageInfo;
import com.sqds.web.Servlets;
import org.apache.commons.beanutils.BeanUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;
import java.util.Map;

/**
 * Created by yby on 2018/1/30.
 */

@Controller
@RequestMapping("/cq/family/statistics/*")
public class StatisticsController {
    @Resource
    private DataDictService dataDictService;
    @Resource
    private StatisticsService statisticsService;
    @Resource
    private FamilyPersonService familyPersonService;
    @Resource
    private HouseService houseService;
    @Resource
    private FamilyHouseService familyHouseService;
    @Resource
    private FamilyHousePersonService familyHousePersonService;
    @Resource
    private FamilyService familyService;

    /**
     * 综合统计查询主界面
     * @param request
     * @param modelMap
     */
    @RequestMapping("main")
    public void main(HttpServletRequest request, ModelMap modelMap) {
        Map<String, String> bdMap = this.dataDictService.getMapByParentAttributeNameForName("分指");
        Map<String, String> groupMap = this.dataDictService.getMapByParentAttributeNameForName("组别");
        Map<String, String> isMap = this.dataDictService.getMapByParentAttributeNameForName("是否");
        Map<String, String> houseTypeMap = this.dataDictService.getMapByParentAttributeNameForName("房屋产别");
        Map<String, String> houseStyleMap = this.dataDictService.getMapByParentAttributeNameForName("房屋类型");
        Map<String, String> houseUseMap = this.dataDictService.getMapByParentAttributeNameForName("住宅房屋用途");
        Map<String, String> bdMapForValue = this.dataDictService.getMapByParentAttributeNameForValue("分指");
        Map<String, String> groupMapForValue = this.dataDictService.getMapByParentAttributeNameForValue("组别");
        Map<String, String> signMap = this.dataDictService.getMapByParentAttributeNameForName("签约状态");
        Map<String, String> jfMap = this.dataDictService.getMapByParentAttributeNameForName("交房状态");
        Map<String, String> bcTypeMap = dataDictService.getMapByParentAttributeNameForName("补偿方式");

        modelMap.addAttribute("bdMap", bdMap);
        modelMap.addAttribute("groupMap", groupMap);
        modelMap.addAttribute("houseTypeMap", houseTypeMap);
        modelMap.addAttribute("houseStyleMap", houseStyleMap);
        modelMap.addAttribute("houseUseMap", houseUseMap);
        modelMap.addAttribute("bdMapForValue", bdMapForValue);
        modelMap.addAttribute("groupMapForValue", groupMapForValue);
        modelMap.addAttribute("isMap", isMap);
        modelMap.addAttribute("signMap", signMap);
        modelMap.addAttribute("jfMap", jfMap);
        modelMap.addAttribute("bcTypeMap", bcTypeMap);

        User user = GetCurrentUser.getLoginUser(request);
        modelMap.addAttribute("departmentCode", user.getDepartment().getDepartmentCode());

    }

    /**
     * 查询
     */
    @RequestMapping("result")
    public void result(HttpServletRequest request, ModelMap modelMap) {
        PageInfo<Family> pageInfo = new PageInfo<Family>();
        Servlets.initPageInfo(request, pageInfo);
        pageInfo = this.statisticsService.getListForCompositeSearch(pageInfo, request);
        modelMap.addAttribute("postValue", pageInfo.getPostValue());
        modelMap.addAttribute("pageInfo", pageInfo);
    }


    @RequestMapping("resultExcel")
    public String resultExcel(HttpServletRequest request, RedirectAttributes redirectAttributes) throws IllegalAccessException, NoSuchMethodException, InvocationTargetException {
        Map<String, String> bdMap = this.dataDictService.getMapByParentAttributeNameForValue("分指");
        Map<String, String> groupMap = dataDictService.getMapByParentAttributeNameForValue("组别");
        Map<String, String> houseTypeMap = dataDictService.getMapByParentAttributeNameForValue("房屋产别");
        Map<String, String> houseStyleMap = dataDictService.getMapByParentAttributeNameForValue("房屋类型");
        Map<String, String> houseUseMap = dataDictService.getMapByParentAttributeNameForValue("住宅房屋用途");
        Map<String, String> marryStatusMap = dataDictService.getMapByParentAttributeNameForValue("婚姻状况");

        Map<String, String> isHaveMap = dataDictService.getMapByParentAttributeNameForValue("有无");
        Map<String, String> isYesMap = dataDictService.getMapByParentAttributeNameForValue("是否");


        Map<String, String> bcTypeMap = dataDictService.getMapByParentAttributeNameForValue("补偿方式");
        Map<String, String> signMap = dataDictService.getMapByParentAttributeNameForValue("签约状态");
        Map<String, String> jfMap = dataDictService.getMapByParentAttributeNameForValue("交房状态");
        Map<String, String> sureStatusMap = dataDictService.getMapByParentAttributeNameForValue("确认状态");
        Map<String, String> firstCheckStatusMap = dataDictService.getMapByParentAttributeNameForValue("初审状态");
        Map<String, String> lastCheckStatusMap = dataDictService.getMapByParentAttributeNameForValue("终审状态");

        PageInfo<Family> pageInfo = new PageInfo<Family>();
        Servlets.initPageInfo(request, pageInfo);
        pageInfo.setPageSize(Integer.MAX_VALUE);
        pageInfo = this.statisticsService.getListForCompositeSearch(pageInfo, request);
        List dataList = Lists.newArrayList();
        //存储列名
        List<String> theadsList = new ArrayList<String>();
        //存储字段名
        List<String> nameList = new ArrayList<String>();
        String familyPerson = "";
        String houseInfo = "";

        if (pageInfo.getTotalCount() > 0) {
            Enumeration<String> param = request.getParameterNames();
            while (param.hasMoreElements()) {
                String name = param.nextElement();
                //当不是查询条件时
                if (name.indexOf("search_") == -1) {
                    String thead = FamilyExcelMap.excelMap().get(name).toString();
                    theadsList.add(thead);
                    nameList.add(name);

                    if (name.equals("familyPerson")){
                        familyPerson = "familyPerson";
                    }
                    if (name.equals("houseInfo")){
                        houseInfo = "houseInfo";
                    }
                }
            }

            Map<Integer, List<FamilyPerson>> familyPersonMap = familyPersonService.getFamilyPersonMap();
            Map<Integer, List<House>> houseInfoMap = houseService.getHouseMap();

            for (Family family : (List<Family>) pageInfo.getResult()) {
                List list = new ArrayList();
                for (int i = 0; i < nameList.size(); i++) {
                    String value = "";
                    String property = nameList.get(i);
                    List<FamilyPerson> familyPersonList = null;
                    List<House> houseInfoList = null;
                    if (property.equals("familyPerson")) {
                        familyPersonList = familyPersonMap.get(family.getId());
                        if(familyPersonList==null){
                            familyPersonList = new ArrayList<FamilyPerson>();
                        }
                        if(familyPersonList.size()==0){
                            familyPersonList.add(new FamilyPerson());
                        }
                        list.add(familyPersonList);
                    }else if (property.equals("houseInfo")) {
                        houseInfoList = houseInfoMap.get(family.getId());
                        if(houseInfoList==null){
                            houseInfoList = new ArrayList<>();
                        }
                        if(houseInfoList.size()==0){
                            houseInfoList.add(new House());
                        }
                        list.add(houseInfoList);
                    }else {
                        value = BeanUtils.getProperty(family, property);
                    }

                    if (value != null && (value.equals("0.00") || value.equals("0"))) {
                        value = "";
                    }
                    if (property.equals("signNum") && value!= null ) {
                        value  = String.format("%04d",Integer.valueOf(value));
                    }
                    if (property.equals("bdCode")) {
                        value = bdMap.get(value) == null ? "" : bdMap.get(value);
                    }
                    if (property.equals("groupCode")) {
                        value = groupMap.get(value) == null ? "" : groupMap.get(value);
                    }
                    if (property.equals("houseType")) {
                        value = houseTypeMap.get(value) == null ? "" : houseTypeMap.get(value);
                    }
                    if (property.equals("marryStatus")) {
                        value = marryStatusMap.get(value) == null ? "" : marryStatusMap.get(value);
                    }
                    if (property.equals("houseStyle")) {
                        value = houseStyleMap.get(value) == null ? "" : houseStyleMap.get(value);
                    }

                    if (property.equals("houseUse")) {
                        value = houseUseMap.get(value) == null ? "" : houseUseMap.get(value);
                    }
                    if (property.equals("houseStatus")) {
                        value = isYesMap.get(value) == null ? "" : isYesMap.get(value);
                    }
                    if (property.equals("sureStatus")) {
                        value = sureStatusMap.get(value) == null ? "" : sureStatusMap.get(value);
                    }
                    if (property.equals("firstCheckStatus")) {
                        value = firstCheckStatusMap.get(value) == null ? "" : firstCheckStatusMap.get(value);
                    }
                    if (property.equals("lastCheckStatus")) {
                        value = lastCheckStatusMap.get(value) == null ? "" : lastCheckStatusMap.get(value);
                    }


                    if (property.equals("bcType")){
                        value = bcTypeMap.get(value) == null ? "" : bcTypeMap.get(value);
                    }
                    if (property.equals("signStatus")){
                        value = signMap.get(value) == null ? "" : signMap.get(value);
                    }
                    if (property.equals("jfStatus")){
                        value = jfMap.get(value) == null ? "" : jfMap.get(value);
                    }

                    if (property.endsWith("Date") && value!=null) {
                        value = value.substring(0,10);
                    }
                    if (!property.equals("familyPerson") && !property.equals("houseInfo")) {
                        list.add(value);
                    }
                }
                dataList.add(list);
            }
        }
        RedirectAttributesExcel.addFlashAttribute(redirectAttributes, "住宅家庭信息台账", "住宅家庭信息台账", theadsList.toArray(new String[theadsList.size()]), dataList,familyPerson,houseInfo);
        return "redirect:/cq/common/export/excel";
    }


    /**
     * 导出标准自建房信息
     */
    @RequestMapping("houseStatusExcel")
    public void houseStatusExcel(HttpServletRequest request, ModelMap modelMap) {
        PageInfo<Family> pageInfo = new PageInfo<Family>();
        Servlets.initPageInfo(request, pageInfo);
        pageInfo = this.familyService.getHouseStatusList(pageInfo);
        modelMap.addAttribute("pageInfo", pageInfo);

        Map<Integer,Integer> familyHeightList = this.familyHouseService.getFamilyHeightList();
        modelMap.addAttribute("familyHeightList", familyHeightList);

        Map<Integer,List<FamilyHouse>> familyHouseList = this.familyHouseService.getFamilyHouseList();
        modelMap.addAttribute("familyHouseList", familyHouseList);

        Map<Integer,List<FamilyHousePerson>> familyHousePersonList = this.familyHousePersonService.getFamilyPersonList();
        modelMap.addAttribute("familyHousePersonList", familyHousePersonList);
    }
}
